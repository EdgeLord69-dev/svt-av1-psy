name: CI build

on:
  push:
    branches: [ "master", "testing-bob-mimalloc" ]
  pull_request:
    branches: [ "master", "testing" ]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              name: "Windows MSVC 64 Bit",
              os: windows-2022,
              environment_script: "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat",
              generators: "Visual Studio 17 2022",
              msvc_arch: x64
            }
          - {
              name: "Ubuntu Latest",
              os: ubuntu-latest,
              c_compiler: gcc,
              cpp_compiler: g++,
            }
          - {
              name: "Ubuntu Latest (Clang)",
              os: ubuntu-latest,
              c_compiler: clang,
              cpp_compiler: clang++,
            }
          - {
              name: "Mac OS Latest arm64",
              os: macos-latest,
              c_compiler: clang,
              cpp_compiler: clang++,
              osx_arch: arm64
            }
    env:
      CMAKE_GENERATOR: "${{ matrix.config.generators }}"
    steps:
    - uses: actions/checkout@v4
    - uses: ilammy/setup-nasm@v1
    - run: git fetch --prune --unshallow
    - name: Ubuntu/Mac OS X
      if: ${{ !contains( matrix.config.generators, 'Visual Studio' ) }}
      run: |
        cmake --fresh -B Build -DCMAKE_BUILD_TYPE=Release "-DCMAKE_CXX_COMPILER=${{ matrix.config.cpp_compiler }}" "-DCMAKE_C_COMPILER=${{ matrix.config.c_compiler }}" -DNATIVE=OFF -DENABLE_AVX512=ON -DCMAKE_LD_FLAGS_RELEASE="-fuse-ld=lld -rtlib=compiler-rt -unwindlib=libunwind -Wl,-O3 -Wl,--lto-O3 -Wl,--as-needed -Wl,--gc-sections -Wl,--icf=all -Wl,--strip-all -Wl,-z,norelro -Wl,--build-id=none -Wl,--no-eh-frame-hdr -Wl,--discard-all -Wl,--relax -Wl,-z,noseparate-code" -DCMAKE_CXX_FLAGS_RELEASE="-Ofast -O3 -march=znver2 -flto=thin -pipe -funroll-loops -fno-math-errno -ffast-math -fomit-frame-pointer -fno-semantic-interposition -fno-stack-protector -fno-stack-clash-protection -fno-sanitize=all -fno-dwarf2-cfi-asm -fno-plt -ffp-contract=fast -fno-pic -fno-pie -fno-exceptions -fno-signed-zeros -fstrict-aliasing -fstrict-overflow -fno-zero-initialized-in-bss -fno-common -fwhole-program-vtables -stdlib=libc++" -DCMAKE_C_FLAGS_RELEASE="-Ofast -O3 -march=znver2 -flto=thin -pipe -funroll-loops -fno-math-errno -ffast-math -fomit-frame-pointer -fno-semantic-interposition -fno-stack-protector -fno-stack-clash-protection -fno-sanitize=all -fno-dwarf2-cfi-asm -fno-plt -ffp-contract=fast -fno-pic -fno-pie -fno-exceptions -fno-signed-zeros -fstrict-aliasing -fstrict-overflow -fno-zero-initialized-in-bss -fno-common -fwhole-program-vtables" -DSVT_AV1_LTO=OFF -DBUILD_APPS=ON -DBUILD_DEC=OFF -DREPRODUCIBLE_BUILDS=ON "-DCMAKE_OSX_ARCHITECTURES=${{ matrix.config.osx_arch }}"
        cmake --build Build --config Release --parallel $(getconf _NPROCESSORS_ONLN 2> /dev/null || nproc 2> /dev/null || sysctl -n hw.ncpu 2> /dev/null)
      shell: bash
    - name: MSVC build
      if: contains( matrix.config.generators, 'Visual Studio' )
      run: |
        cmake -B Build -A "${{ matrix.config.msvc_arch }}" -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DBUILD_APPS=ON -DBUILD_DEC=OFF -DREPRODUCIBLE_BUILDS=ON
        cmake --build Build --config Release
      shell: cmd
    - uses:  GuillaumeFalourd/clone-github-repo-action@v2.3
      with:
        depth: 1
        branch: 'main'
        owner: 'EdgeLord69-dev'
        repository: 'pgo'
    - name: PGO
      run: |
        cd pgo
        curl https://media.xiph.org/video/derf/objective-1-fast.tar.gz -o objective-1.tar.gz
        tar -xvf objective-1-fast.tar.gz
        python3 encode.py --svt-repo ../
        
      
      
